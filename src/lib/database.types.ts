// This file is auto-generated by Supabase. Do not edit manually.
// To regenerate, run `npx supabase gen types typescript --project-id <your-project-id> > src/lib/database.types.ts`

export type Json = | string | number | boolean | null | { [key: string]: Json | undefined } | Json[]

export type Database = {
  public: {
    Tables: {
      artworks: {
        Row: {
          artist_id: string
          category_id: number | null
          created_at: string
          description: string | null
          dimensions: string | null
          id: number
          image_url: string
          price: number
          title: string
          type: string
        }
        Insert: {
          artist_id: string
          category_id?: number | null
          created_at?: string
          description?: string | null
          dimensions?: string | null
          id?: number
          image_url: string
          price: number
          title: string
          type?: string
        }
        Update: {
          artist_id?: string
          category_id?: number | null
          created_at?: string
          description?: string | null
          dimensions?: string | null
          id?: number
          image_url?: string
          price?: number
          title?: string
          type?: string
        }
        Relationships: [
          {
            foreignKeyName: "artworks_artist_id_fkey"
            columns: ["artist_id"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "artworks_category_id_fkey"
            columns: ["category_id"]
            isOneToOne: false
            referencedRelation: "categories"
            referencedColumns: ["id"]
          },
        ]
      }
      categories: {
        Row: {
          created_at: string
          id: number
          name: string
        }
        Insert: {
          created_at?: string
          id?: number
          name: string
        }
        Update: {
          created_at?: string
          id?: number
          name?: string
        }
        Relationships: []
      }
      profiles: {
        Row: {
          artist_bio: string | null
          avatar_url: string | null
          full_name: string | null
          id: string
          is_artist: boolean | null
          updated_at: string | null
          username: string | null
          website: string | null
        }
        Insert: {
          artist_bio?: string | null
          avatar_url?: string | null
          full_name?: string | null
          id: string
          is_artist?: boolean | null
          updated_at?: string | null
          username?: string | null
          website?: string | null
        }
        Update: {
          artist_bio?: string | null
          avatar_url?: string | null
          full_name?: string | null
          id?: string
          is_artist?: boolean | null
          updated_at?: string | null
          username?: string | null
          website?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "profiles_id_fkey"
            columns: ["id"]
            isOneToOne: true
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
    }
    Views: { [_ in never]: never }
    Functions: { [_ in never]: never }
    Enums: { [_ in never]: never }
    CompositeTypes: { [_ in never]: never }
  }
}

export type Tables<T extends keyof Database["public"]["Tables"]> = Database["public"]["Tables"][T]["Row"]
export type Enums<T extends keyof Database["public"]["Enums"]> = Database["public"]["Enums"][T]
